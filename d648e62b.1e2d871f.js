(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(3),a=(n(0),n(82));const o={title:"ConfigMap Operator"},i={unversionedId:"configmap-operator",id:"configmap-operator",isDocsHomePage:!1,title:"ConfigMap Operator",description:"Please first look at CRD Operator documentation. It contains more common information, which is applicable to ConfigMap",source:"@site/../docs/target/mdoc/configmap-operator.md",slug:"/configmap-operator",permalink:"/freya/configmap-operator",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/../docs/target/mdoc/configmap-operator.md",version:"current",sidebar:"docs",previous:{title:"CRD Operator",permalink:"/freya/crd-operator"},next:{title:"Resource parsing",permalink:"/freya/resource-parsing"}},c=[{value:"Implementation Steps with Freya",id:"implementation-steps-with-freya",children:[{value:"1 . Define resource specification as a hierarchy of case classes.",id:"1--define-resource-specification-as-a-hierarchy-of-case-classes",children:[]},{value:"2 . Implement your actions for Add, Modify, Delete events",id:"2--implement-your-actions-for-add-modify-delete-events",children:[]},{value:"3 . Start your operator",id:"3--start-your-operator",children:[]},{value:"ConfigMap Helper",id:"configmap-helper",children:[]}]}],p={toc:c};function l({components:e,...t}){return Object(a.b)("wrapper",Object(r.a)({},p,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Please first look at CRD Operator documentation. It contains more common information, which is applicable to ConfigMap\noperator too."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"ConfigMap")," is a native resource, so that no custom definition needs to be created in Kubernetes before we start creating\ncustom resources."),Object(a.b)("p",null,"Using ",Object(a.b)("inlineCode",{parentName:"p"},"ConfigMap")," option, our target custom resource will look like this:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: my-krb1\n  namespace: test\n  labels:\n    io.myorg.kerboperator/kind: Kerb\ndata:\n  config: |\n    realm: EXAMPLE.COM\n    principals:\n      - name: client1\n        password: static\n        value: mypass\n      - name: user2\n        password: static\n        value: mypass2\n")),Object(a.b)("p",null,"Please note, above ",Object(a.b)("inlineCode",{parentName:"p"},"data.config")," section does not define any Custom Resources in terms of Kubernetes, we just leverage\na plain ",Object(a.b)("inlineCode",{parentName:"p"},"ConfigMap")," to emulate custom resource."),Object(a.b)("h2",{id:"implementation-steps-with-freya"},"Implementation Steps with Freya"),Object(a.b)("p",null,"There are 3 steps to implement ConfigMap Operator:"),Object(a.b)("h3",{id:"1--define-resource-specification-as-a-hierarchy-of-case-classes"},"1 . Define resource specification as a hierarchy of case classes."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-scala"},'final case class Principal(name: String, password: String, value: String = "")\nfinal case class Kerb(realm: String, principals: List[Principal])\n')),Object(a.b)("h3",{id:"2--implement-your-actions-for-add-modify-delete-events"},"2 . Implement your actions for Add, Modify, Delete events"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-scala"},'import freya.CmController\nimport cats.effect.ConcurrentEffect\nimport io.fabric8.kubernetes.api.model.ConfigMap\n\nclass KrbCmController[F[_]](implicit F: ConcurrentEffect[F]) \n  extends CmController[F, Kerb] {\n\n  // override onAdd, onDelete, onModify like in Crd Controller \n\n  override def isSupported(cm: ConfigMap): Boolean =\n    cm.getMetadata.getName.startsWith("krb")\n}\n')),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"CmController")," class adds ",Object(a.b)("inlineCode",{parentName:"p"},"isSupported")," method, which allows to skip particular ConfigMaps if they do not\nsatisfy to logical condition."),Object(a.b)("h3",{id:"3--start-your-operator"},"3 . Start your operator"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-scala"},'import cats.effect.{ContextShift, ExitCode, IO, IOApp}\nimport io.fabric8.kubernetes.client.DefaultKubernetesClient\nimport freya.K8sNamespace.Namespace\nimport freya.Configuration.ConfigMapConfig\nimport freya.Operator\nimport freya.yaml.jackson._\n\nobject KerbCmOperator extends IOApp {\n  implicit val cs: ContextShift[IO] = contextShift\n\n  override def run(args: List[String]): IO[ExitCode] = {\n    val client = IO(new DefaultKubernetesClient)\n    \n    // the same API as for Crd Operator, but with own configuration and constructor\n    val cfg = ConfigMapConfig(Namespace("test"), prefix = "io.myorg.kerboperator")\n\n    Operator\n      .ofConfigMap[IO, Kerb](cfg, client, new KrbCmController[IO])\n      .run\n  }\n}\n')),Object(a.b)("h3",{id:"configmap-helper"},"ConfigMap Helper"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"ConfigMapHelper")," provides the same functionality as ",Object(a.b)("inlineCode",{parentName:"p"},"CrdHelper"),", but with respect to ConfigMap kind:"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"currentConfigMaps")," - a method to return current current ConfigMap resources based on passed earlier Operator\nconfiguration"),Object(a.b)("p",null,"Properties:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"freya.Configuration.ConfigMapConfig")," - configuration which is passed on operator construction "),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"io.fabric8.kubernetes.client.KubernetesClient")," - K8s client"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"Option[Boolean]")," - isOpenShift property"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"freya.resource.ConfigMapParser")," - ConfigMap parser to parse ",Object(a.b)("inlineCode",{parentName:"li"},"config")," key of data map to target ",Object(a.b)("inlineCode",{parentName:"li"},"T")," kind")))}l.isMDXComponent=!0},82:function(e,t,n){"use strict";n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),s=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},f=function(e){var t=s(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),f=s(n),m=r,b=f["".concat(i,".").concat(m)]||f[m]||u[m]||o;return n?a.a.createElement(b,c(c({ref:t},l),{},{components:n})):a.a.createElement(b,c({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);